language: cpp
env:
  global:
  - FORCE_INSTALL=1
  - BUILD_UTILITIES=1
  - secure: WPHaDUI0jTv7+l1R/5W3vzkP5+6/B7SM/VpF7PeVQAC5emWOC/BgNLurosjHUfYWE8Fs9sRYYsv6GXvU5n64gyMQhBQInmrEezfbc/LkP1cj+q5jUzFkJvlmFSIY+b570OPzXoIaR0ydmB80UgOezYvqjjDvI3TGXt+JY8Dp6oljqUuRy647UUkH52E7LKW/+Zh7Yq5sx3VJoBeSLrnl/CVUff4T6onITz2jHYNAf0kK/Yo5whcWpz0L+EGwhHUb8TJfQXMyL2PBQRZMbOBwfhFzFDC+j5uaJ4PYEqSRn+cemQhazDAUbNx7kVi1hMsLZZMRIG56zPJPV7DRM2ggCYaFSf0S/Ifm4e5Dj7TyM3uNqs55tGaJd/fHrNcr95bge/kn9yhqc0Lvm+oIiAKGhMnwwFymqLXxWRWYGCSp5zb8BAdUTrVZaLOA/siyNu6I+y0uPbdF8FFTgmJzKGEI09fRnn2o50Ott087E+hr7Xqr1g4OCmHdNX26uAS5gIwTfMVDLL86+gyY2gDBa9yN3HQrJKmppWjt02sR+1McvZY8Z6CjnlwiAUcMudJc9p2f5W3Mnxxv9Snz+fMGSmgCtc3uSWCrHegHHSm70+0/BDN88WLBY5X35cs821GXuFxvOndisZebjiunCtlRu0W0xQISCQ+Dw20xFhgN7aZiN34=

matrix:
  include:

  - os: osx
    name: "Build macOS XCODE5"
    osx_image: xcode10.2
    compiler: clang

    script:
    - HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl mingw-w64
    - "./build_oc.tool"
    - "./build_duet.tool"

    deploy:
      provider: releases
      skip_cleanup: true
      file:
      - Binaries/RELEASE/*.zip
      - Binaries/DEBUG/*.zip
      file_glob: true
      on:
        tags: true
      api_key:
        secure: BCsj6FO40+02MPylXhIrUqS0KmwoUsd3y+iS5mwcBo16dqTbgF/emsApptKKgLCrb83sgmedkdEI1tkMTw7kAP8341E4Xmo0DVRQcJ/zDMXMtutmN5f0j1sMsiHhZ6wnaFhVIOvysSiuIal5vRX04rG/2UPnrM2CIv3s1jQPMhuMJGWPGOg76UoFQVo+1Mx7AtDTLJoJhymtIldbrH30h77HDdJbyCT+VPBtFmNbBJvTwVTyyVOuKkUX5JI0P1qNayEY6aFURLvOR6ZR7CSqIFXOiQmWEbFulxGp3Ss+HD+Ule94DXEeuK7xF1NKYHubUBF8BDk3eJcSfbA0vFvE6SbB1OJHItVnXliLb/pR3TlJiY11+XtT3N2YFHTEFOVSUxplyQpmXZDwhiIgn7sZRZQGL6Eqs4CtjKj8Lu/EJEFRIbJZCdlVkznFebSwMjvRaK9Anj1vW5gFs+Wsw5lUZOJPYI8jiHdzGszsDFpOex2PVixwLfVscM7fa5Sgsk4FgV0EzGpzmbcH9jc7AurbyRUgCSnDxhOuH/m4TJLdS8xL3XS+MiB8wZ4bTStqjMWK6fKy13IrmLChJUVPBYoyyqgOjHjtOBYYEcChpDbUqiLh6UCpFyZmkiph8uElgolgGuDZkEIGwcuquap2Ih4q9x1CX5eMri/ukzAqaHz506o=

  - os: linux
    name: "Build Linux CLANGPDB/GCC5"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - libssl-dev

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - file="clang+llvm-9.0.1-x86_64-linux-gnu-ubuntu-16.04"
    - suf=".tar.xz"
    - curl -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/${file}${suf}" || exit 1
    - sum=$(shasum -a 256 "${file}${suf}" | cut -f1 -d' ')
    - expsum="1af280e96fec62acf5f3bb525e36baafe09f95f940dc9806e22809a83dfff4f8"
    - if [ "$sum" != "$expsum" ]; then echo "Invalid checksum $sum" ; exit 1 ; fi
    - tar -xf "${file}${suf}" || exit 1
    - export PATH="$(pwd)/${file}/bin:$PATH"
    - "./build_oc.tool"
    - "./build_duet.tool"

  - os: linux
    name: "Build Linux CLANG38"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - clang-8
        - llvm-8-dev

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - sudo apt-get remove -y llvm-3.8 libllvm3.8 # Move LLVM 3.8 out of the way.
    - export PATH="/usr/lib/llvm-8/bin:$PATH" # Default compiler (7.0 or 3.8) has no LTO plugin.
    - export TOOLCHAINS=CLANG38
    - "./build_oc.tool"
    - "./build_duet.tool"
    # Currently this is too ugly, but maybe we can use that in the future.
    - sudo apt-get install -y doxygen texlive texlive-latex-extra
    - abort() { tail -200 log.txt ; exit 1 ; }
    - doxygen Doxyfile &> log.txt || abort
    - cd Doxy/latex || abort
    - make pdf &> log.txt || abort

  - os: windows
    name: "Build Windows VS2017"

    script:
    - BUILD_UTILITIES=0
    - choco install microsoft-build-tools visualcpp-build-tools make nasm python zip
    - "./build_oc.tool"
    - "./build_duet.tool"

  - os: osx
    name: "Analyze Scripts"

    script:
    - HOMEBREW_NO_INSTALL_CLEANUP=1 brew install shellcheck
    - find . \( -name "*.tool" -o -name "*.command" -o -name "*.sh" \) -exec sh -c 'for TargetFile; do shellcheck --severity=info "${TargetFile}" || exit 1; done' sh {} +
    - pip2 install pyyaml
    - cd AppleModels || exit 1
    - python2 ./update_generated.py  || exit 1
    - if [ "$(git status --porcelain)" != "" ]; then echo "DataBase desync"; exit 1 ; fi

  - os: osx
    name: "Analyze Coverity"
    osx_image: xcode11.3
    compiler: clang

    before_install:
      - HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl
      - curl -Ls https://entrust.com/root-certificates/entrust_l1k.cer -o ~/entrust_l1k.crt || exit 1
      - curl -LS https://curl.haxx.se/ca/cacert.pem -o ~/cacert.pem || exit 1
      - cat ~/entrust_l1k.crt >> ~/cacert.pem || exit 1
      - echo "cacert=\"$HOME/cacert.pem\"" > ~/.curlrc || exit 1
      - echo "ca_certificate=$HOME/cacert.pem" > ~/.wgetrc || exit 1

    script:
      - echo "This script runs coverity..."

    addons:
      coverity_scan:
        project:
          name: "acidanthera/OpenCorePkg"
          description: "OpenCorePkg"
        notification_email: $NOTIFICATION_EMAIL
        build_command_prepend: "./build_oc.tool --skip-build --skip-package && cd UDK ; src=$(curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/covstrap.sh) && eval \"$src\" || exit 1"
        build_command: "../build_oc.tool --skip-tests --skip-package RELEASE"
        branch_pattern: master
